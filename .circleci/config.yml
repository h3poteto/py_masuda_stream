version: 2
jobs:
  build:
    docker:
      - image: node:9-alpine
    working_directory: /var/opt/app
    steps:
      - checkout
      - run:
          name: Check node version
          command: |
            node --version
            npm --version
      # キャッシュはS3に置いてあるがそれらのやり取り時に証明書が必要になる
      # 自己証明書を生み出すためのca-certificatesがないと通信できない
      - run:
          name: Install ca-certificate
          command: apk add --no-cache ca-certificates
      - restore_cache:
          name: Restoring cache - node_modules
          keys:
            - node_modules-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
      - run:
          name: Node packages install
          command: npm install
      - run:
          name: Build manifest file
          command: npm run compile
      - save_cache:
          name: Saving cache - node_modules
          key: node_modules-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"

  image:
    machine: true
    steps:
      - checkout
      - run:
          name: Check docker version
          command: docker version
      - run:
          name: Docker build
          command: |
            docker build -t $AWS_ECR_REPOSITORY:$CIRCLE_SHA1 .
            docker tag $AWS_ECR_REPOSITORY:$CIRCLE_SHA1 $AWS_ECR_REPOSITORY:latest
      - run:
          name: Docker push
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
            docker push $AWS_ECR_REPOSITORY:$CIRCLE_SHA1
            docker push $AWS_ECR_REPOSITORY:latest

  deploy:
    machine: true
    environment:
      - CLUSTER_NAME: base-default-prd
      - SERVICE_NAME: masudastream-web-prd
      - AWS_DEFAULT_REGION: ap-northeast-1
      - RUN_TASK_DEFINITION: masudastream-web-prd-task:1
    steps:
      - checkout
      - run: &prepare_goploy
          name: Preparing ecs-goploy
          command: |
            wget https://github.com/h3poteto/ecs-goploy/releases/download/v0.3.6/ecs-goploy_v0.3.6_linux_amd64.zip
            unzip ecs-goploy_v0.3.6_linux_amd64.zip
            ./ecs-goploy version
      - run: &migrate
          name: migrate
          command: |
            ./ecs-goploy task --cluster ${CLUSTER_NAME} --container-name task --image $AWS_ECR_REPOSITORY:$CIRCLE_SHA1 --timeout 600 --task-definition ${RUN_TASK_DEFINITION} --command "./manage.py migrate"
      - run: &deploy
          name: ecs deploy
          command: |
            ./ecs-goploy service --cluster ${CLUSTER_NAME} --service-name ${SERVICE_NAME} --image $AWS_ECR_REPOSITORY:$CIRCLE_SHA1 --timeout 600 --enable-rollback --skip-check-deployments


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - image:
          filters:
            branches:
              only:
                - master
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - image
            - build
